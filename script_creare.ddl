-- Generated by Oracle SQL Developer Data Modeler 22.2.0.165.1149
--   at:        2022-12-23 20:54:18 EET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE departamente (
    id_departament   NUMBER(2) NOT NULL,
    nume_departament VARCHAR2(20) NOT NULL
);

ALTER TABLE departamente ADD CHECK ( REGEXP_LIKE ( nume_departament,
                                                   '^([a-zA-Z -]*)$' ) );

ALTER TABLE departamente ADD CONSTRAINT departamente_pk PRIMARY KEY ( id_departament );

CREATE TABLE detalii_vol (
    id_voluntar   NUMBER(4) NOT NULL,
    numar_telefon VARCHAR2(12) NOT NULL,
    email         VARCHAR2(40),
    data_nastere  DATE
);

ALTER TABLE detalii_vol ADD CHECK ( REGEXP_LIKE ( numar_telefon,
                                                  '^([0-9 ]{10})|(\+([0-9]){11})$' ) );

ALTER TABLE detalii_vol ADD CHECK ( REGEXP_LIKE ( email,
                                                  '^[\w-.]+@([\w-]+\.)+[\w-]{2,4}$' ) );

ALTER TABLE detalii_vol ADD CONSTRAINT detalii_vol_pk PRIMARY KEY ( id_voluntar );

CREATE TABLE evenimente (
    id_event      NUMBER(2) NOT NULL,
    nume_event    VARCHAR2(30) NOT NULL,
    data_start    DATE NOT NULL,
    data_stop     DATE NOT NULL,
    locatie_event VARCHAR2(20),
    buget_event   NUMBER(7)
);

ALTER TABLE evenimente ADD CHECK ( REGEXP_LIKE ( nume_event,
                                                 '^([a-zA-Z -]*)$' ) );

ALTER TABLE evenimente ADD CHECK ( data_stop >= data_start );

ALTER TABLE evenimente ADD CONSTRAINT evenimente_pk PRIMARY KEY ( id_event );

CREATE TABLE parteneri (
    id_partener   NUMBER(2) NOT NULL,
    nume_partener VARCHAR2(20) NOT NULL
);

ALTER TABLE parteneri ADD CHECK ( REGEXP_LIKE ( nume_partener,
                                                '^([a-zA-Z -]*)$' ) );

CREATE INDEX parteneri_evenimente_fk ON
    parteneri (
        id_partener
    ASC );
	
ALTER TABLE parteneri ADD CONSTRAINT parteneri_pk PRIMARY KEY ( id_partener );

CREATE TABLE parteneri_evenimente (
    parteneri_id_partener NUMBER(2) NOT NULL,
    evenimente_id_event   NUMBER(2) NOT NULL
);

ALTER TABLE parteneri_evenimente ADD CONSTRAINT relation_14_pk PRIMARY KEY ( parteneri_id_partener,
                                                                             evenimente_id_event );

CREATE TABLE roluri (
    id_rol       NUMBER(2) NOT NULL,
    denumire_rol VARCHAR2(20) NOT NULL
);

ALTER TABLE roluri ADD CHECK ( REGEXP_LIKE ( denumire_rol,
                                             '^([a-zA-Z -]*)$' ) );

ALTER TABLE roluri ADD CONSTRAINT roluri_pk PRIMARY KEY ( id_rol );

CREATE TABLE voluntari (
    id_voluntar    NUMBER(4) NOT NULL,
    nume           VARCHAR2(30) NOT NULL,
    data_aderare   DATE NOT NULL,
    id_rol         NUMBER(2) NOT NULL,
    id_departament NUMBER(2)
);

ALTER TABLE voluntari ADD CHECK ( REGEXP_LIKE ( nume,
                                                '^([a-zA-Z -]*)$' ) );

ALTER TABLE voluntari ADD CHECK ( id_rol != 50 );

CREATE UNIQUE INDEX voluntari__idx ON
    voluntari (
        id_voluntar
    ASC );

ALTER TABLE voluntari ADD CONSTRAINT voluntari_pk PRIMARY KEY ( id_voluntar );

CREATE TABLE voluntari_alumni (
    id_voluntar     NUMBER(4) NOT NULL,
    nume            VARCHAR2(30) NOT NULL,
    data_aderare    DATE NOT NULL,
    data_alumnizare DATE NOT NULL,
    id_rol          NUMBER(2) NOT NULL,
	numar_telefon   VARCHAR2(12),
    email           VARCHAR2(50),
    data_nastere    DATE
);

ALTER TABLE voluntari_alumni ADD CHECK ( REGEXP_LIKE ( nume,
                                                       '^([a-zA-Z -]*)$' ) );

ALTER TABLE voluntari_alumni ADD CHECK ( REGEXP_LIKE ( numar_telefon,
                                                       '^([0-9 ]{10})|(\+([0-9]){11})$' ) );

ALTER TABLE voluntari_alumni ADD CHECK ( REGEXP_LIKE ( email,
                                                       '^[\w-.]+@([\w-]+\.)+[\w-]{2,4}$' ) );

ALTER TABLE voluntari_alumni ADD CHECK ( data_aderare > data_nastere );

ALTER TABLE voluntari_alumni ADD CHECK ( data_alumnizare >= data_aderare );

ALTER TABLE voluntari_alumni ADD CHECK ( id_rol = 50 );

ALTER TABLE voluntari_alumni ADD CONSTRAINT voluntari_pkv2 PRIMARY KEY ( id_voluntar );

ALTER TABLE voluntari
    ADD CONSTRAINT departamente_voluntari_fk FOREIGN KEY ( id_departament )
        REFERENCES departamente ( id_departament );

-- ALTER TABLE parteneri
--    ADD CONSTRAINT parteneri_evenimente_fk FOREIGN KEY ( id_partener )
--        REFERENCES evenimente ( id_event );

ALTER TABLE parteneri_evenimente
    ADD CONSTRAINT relation_14_evenimente_fk FOREIGN KEY ( evenimente_id_event )
        REFERENCES evenimente ( id_event );

ALTER TABLE parteneri_evenimente
    ADD CONSTRAINT relation_14_parteneri_fk FOREIGN KEY ( parteneri_id_partener )
        REFERENCES parteneri ( id_partener );

ALTER TABLE voluntari_alumni
    ADD CONSTRAINT roluri_alumni_fk FOREIGN KEY ( id_rol )
        REFERENCES roluri ( id_rol );

ALTER TABLE voluntari
    ADD CONSTRAINT roluri_voluntari_fk FOREIGN KEY ( id_rol )
        REFERENCES roluri ( id_rol );

ALTER TABLE detalii_vol
    ADD CONSTRAINT voluntari_detalii_fk FOREIGN KEY ( id_voluntar )
        REFERENCES voluntari ( id_voluntar );

CREATE SEQUENCE departamente_id_departament START WITH 10 INCREMENT BY 10 MINVALUE 10 MAXVALUE 90 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER departamente_id_departament BEFORE
    INSERT ON departamente
    FOR EACH ROW
    WHEN ( new.id_departament IS NULL )
BEGIN
    :new.id_departament := departamente_id_departament.nextval;
END;
/

CREATE SEQUENCE evenimente_id_event_seq START WITH 10 MINVALUE 10 MAXVALUE 91 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER evenimente_id_event_trg BEFORE
    INSERT ON evenimente
    FOR EACH ROW
    WHEN ( new.id_event IS NULL )
BEGIN
    :new.id_event := evenimente_id_event_seq.nextval;
END;
/

CREATE SEQUENCE parteneri_id_partener_seq START WITH 10 MINVALUE 10 MAXVALUE 99 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER parteneri_id_partener_trg BEFORE
    INSERT ON parteneri
    FOR EACH ROW
    WHEN ( new.id_partener IS NULL )
BEGIN
    :new.id_partener := parteneri_id_partener_seq.nextval;
END;
/

CREATE SEQUENCE roluri_id_rol_seq START WITH 10 INCREMENT BY 10 MINVALUE 10 MAXVALUE 59 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER roluri_id_rol_trg BEFORE
    INSERT ON roluri
    FOR EACH ROW
    WHEN ( new.id_rol IS NULL )
BEGIN
    :new.id_rol := roluri_id_rol_seq.nextval;
END;
/

CREATE SEQUENCE voluntari_id_voluntar_seq START WITH 100 MINVALUE 100 MAXVALUE 999 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER voluntari_id_voluntar_trg BEFORE
    INSERT ON voluntari
    FOR EACH ROW
    WHEN ( new.id_voluntar IS NULL )
BEGIN
    :new.id_voluntar := voluntari_id_voluntar_seq.nextval;
END;
/

CREATE SEQUENCE voluntari_alumni_id_voluntar START WITH 100 MINVALUE 100 MAXVALUE 999 CYCLE NOCACHE ORDER;

CREATE OR REPLACE TRIGGER voluntari_alumni_id_voluntar BEFORE
    INSERT ON voluntari_alumni
    FOR EACH ROW
    WHEN ( new.id_voluntar IS NULL )
BEGIN
    :new.id_voluntar := voluntari_alumni_id_voluntar.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             8
-- CREATE INDEX                             3
-- ALTER TABLE                             30
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           6
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          6
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
